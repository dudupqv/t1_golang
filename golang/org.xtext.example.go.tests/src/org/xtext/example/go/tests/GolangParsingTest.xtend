/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.go.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import org.xtext.example.go.golang.VarDecl

@RunWith(XtextRunner)
@InjectWith(GolangInjectorProvider)
class GolangParsingTest {
	@Inject
	ParseHelper<VarDecl> parseHelper
	
	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			var x, y float32 = -1, -2
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	
	@Test
	def void loadModel1() {
		val result = parseHelper.parse('''
			var i int
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	
	@Test
	def void loadModel2() {
		val result = parseHelper.parse('''
			var k = 0
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	
	@Test
	def void loadModel3() {
		val result = parseHelper.parse('''
			var U, V, W float64
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
	
	@Test
	def void loadModel4() {
		val result = parseHelper.parse('''
			var re, im = complexSqrt(-1)
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}
}
